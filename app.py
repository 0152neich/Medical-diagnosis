import streamlit as st
import pickle
import numpy as np
from configs.config import MODEL_PATH, LABEL_ENCODER_PATH
from googletrans import Translator

# Load model
with open(MODEL_PATH, 'rb') as f:
    model = pickle.load(f)

# Load LabelEncoder to convert predicted label to disease name
with open(LABEL_ENCODER_PATH, 'rb') as f:
    le = pickle.load(f)

st.title("ü©∫ H·ªá th·ªëng d·ª± ƒëo√°n b·ªánh")
st.write("Vui l√≤ng nh·∫≠p c√°c th√¥ng tin b√™n d∆∞·ªõi ƒë·ªÉ d·ª± ƒëo√°n b·ªánh:")
col1, col2 = st.columns([1, 1])

with col1:
    age = st.number_input("Tu·ªïi", min_value=0, max_value=120, value=25)
    gender = st.selectbox("Gi·ªõi t√≠nh", ["Nam", "N·ªØ"])
    fever = st.selectbox("S·ªët", ["C√≥", "Kh√¥ng"])
    cough = st.selectbox("Ho", ["C√≥", "Kh√¥ng"])

with col2:
    fatigue = st.selectbox("M·ªát m·ªèi", ["C√≥", "Kh√¥ng"])
    difficulty_breathing = st.selectbox("Kh√≥ th·ªü", ["C√≥", "Kh√¥ng"])
    blood_pressure = st.selectbox("Huy·∫øt √°p", ["Th·∫•p", "B√¨nh th∆∞·ªùng", "Cao"])
    cholesterol_level = st.selectbox("Cholesterol", ["Th·∫•p", "B√¨nh th∆∞·ªùng", "Cao"])

# Preprocess input data
gender = 1 if gender == "Nam" else 0
fever = 1 if fever == "C√≥" else 0
cough = 1 if cough == "C√≥" else 0
fatigue = 1 if fatigue == "C√≥" else 0
difficulty_breathing = 1 if difficulty_breathing == "C√≥" else 0
blood_pressure = {"Th·∫•p": 0, "B√¨nh th∆∞·ªùng": 1, "Cao": 2}[blood_pressure]
cholesterol_level = {"Th·∫•p": 0, "B√¨nh th∆∞·ªùng": 1, "Cao": 2}[cholesterol_level]

# Predict disease
if st.button("üîç D·ª± ƒëo√°n b·ªánh"):
    input_data = np.array([[age, gender, fever, cough, fatigue, difficulty_breathing, blood_pressure, cholesterol_level]])
    prediction = model.predict(input_data)
    predicted_disease = le.inverse_transform(prediction)[0]
    # Translate predicted disease to Vietnamese
    translator = Translator()
    predicted_disease = translator.translate(predicted_disease, src='en', dest='vi').text

    st.subheader("üîî K·∫øt qu·∫£ d·ª± ƒëo√°n:")
    st.write(f"üíä B·ªánh c√≥ th·ªÉ m·∫Øc ph·∫£i: **{predicted_disease}**")
